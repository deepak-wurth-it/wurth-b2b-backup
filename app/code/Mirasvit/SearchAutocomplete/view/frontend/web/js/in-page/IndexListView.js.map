{"version":3,"sources":["../../ts/src/in-page/IndexListView.ts"],"names":["IndexListView","props","indexes","result","isActive","index","identifier","activeIndex","selectIndex"],"mappings":";;MAOaA,a,GAGT,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AAAA,SAI1BC,OAJ0B,GAIhB,YAAM;AACZ,aAAO,KAAI,CAACD,KAAL,CAAWE,MAAX,GAAoBD,OAA3B;AACH,KANyB;;AAAA,SAQ1BE,QAR0B,GAQf,UAACC,KAAD,EAAwB;AAC/B,aAAOA,KAAK,CAACC,UAAN,IAAoB,KAAI,CAACL,KAAL,CAAWM,WAAX,EAA3B;AACH,KAVyB;;AAAA,SAY1BC,WAZ0B,GAYZ,UAACH,KAAD,EAAwB;AAClC,MAAA,KAAI,CAACJ,KAAL,CAAWM,WAAX,CAAuBF,KAAK,CAACC,UAA7B;AACH,KAdyB;;AACtB,SAAKL,KAAL,GAAaA,KAAb;AACH,G","sourcesContent":["import { IndexResult, Result } from \"../types\"\n\ninterface Props {\n    result: KnockoutObservable<Result>\n    activeIndex: KnockoutObservable<string>\n}\n\nexport class IndexListView {\n    props: Props\n\n    constructor(props: Props) {\n        this.props = props\n    }\n\n    indexes = () => {\n        return this.props.result().indexes\n    }\n\n    isActive = (index: IndexResult) => {\n        return index.identifier == this.props.activeIndex()\n    }\n\n    selectIndex = (index: IndexResult) => {\n        this.props.activeIndex(index.identifier)\n    }\n}\n"],"file":"IndexListView.js"}